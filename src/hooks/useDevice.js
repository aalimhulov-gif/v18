import { useState, useEffect } from 'react'

export const useDeviceType = () => {
  const [deviceType, setDeviceType] = useState('desktop')

  useEffect(() => {
    const detectDevice = () => {
      const userAgent = navigator.userAgent.toLowerCase()
      const isMobile = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent)
      const isTablet = /ipad|android(?!.*mobile)/i.test(userAgent)
      
      if (isMobile && !isTablet) {
        setDeviceType('mobile')
      } else if (isTablet) {
        setDeviceType('tablet')
      } else {
        setDeviceType('desktop')
      }
    }

    detectDevice()
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –ø–æ–≤–æ—Ä–æ—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞)
    window.addEventListener('resize', detectDevice)
    
    return () => {
      window.removeEventListener('resize', detectDevice)
    }
  }, [])

  return deviceType
}

export const getDeviceIcon = (deviceType, isOnline = false) => {
  if (!isOnline) return '‚ö™' // –°–µ—Ä–∞—è —Ç–æ—á–∫–∞ –¥–ª—è –æ—Ñ—Ñ–ª–∞–π–Ω
  
  switch (deviceType) {
    case 'mobile':
      return 'üì±' // –¢–µ–ª–µ—Ñ–æ–Ω
    case 'tablet':
      return 'üì≤' // –ü–ª–∞–Ω—à–µ—Ç
    case 'desktop':
    default:
      return 'üíª' // –ö–æ–º–ø—å—é—Ç–µ—Ä
  }
}

export const getDeviceStatus = (deviceType, isOnline = false) => {
  if (!isOnline) return '–ù–µ –≤ —Å–µ—Ç–∏'
  
  switch (deviceType) {
    case 'mobile':
      return '–û–Ω–ª–∞–π–Ω —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
    case 'tablet':
      return '–û–Ω–ª–∞–π–Ω —Å –ø–ª–∞–Ω—à–µ—Ç–∞'
    case 'desktop':
    default:
      return '–û–Ω–ª–∞–π–Ω —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞'
  }
}