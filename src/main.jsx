
import React from 'react'
import { createRoot } from 'react-dom/client'
import { HashRouter } from 'react-router-dom'
import App from './App.jsx'
import ErrorBoundary from './components/ErrorBoundary.jsx'
import OfflineMode from './components/OfflineMode.jsx'
import './styles/index.css'

console.log('üöÄ Starting React app...')
console.log('Environment:', {
  NODE_ENV: process.env.NODE_ENV,
  MODE: import.meta.env.MODE,
  DEV: import.meta.env.DEV,
  BASE_URL: import.meta.env.BASE_URL
})

const rootElement = document.getElementById('root')
console.log('Root element found:', !!rootElement)

if (!rootElement) {
  console.error('‚ùå Root element not found! Check your HTML.')
  throw new Error('Root element not found')
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
async function renderApp() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Firebase –¥–æ—Å—Ç—É–ø–µ–Ω
  let firebaseAvailable = true
  try {
    // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å Firebase –∫–æ–Ω—Ñ–∏–≥
    await import('./firebase/firebaseConfig.js')
    console.log('‚úÖ Firebase config loaded')
  } catch (error) {
    console.error('‚ùå Firebase config failed to load:', error)
    firebaseAvailable = false
  }

  try {
    const root = createRoot(rootElement)
    console.log('‚úÖ React root created successfully')
    
    if (!firebaseAvailable) {
      console.log('üîß Starting in offline mode')
      root.render(<OfflineMode />)
    } else {
      root.render(
        <React.StrictMode>
          <ErrorBoundary>
            <HashRouter>
              <App />
            </HashRouter>
          </ErrorBoundary>
        </React.StrictMode>
      )
    }
    
    console.log('‚úÖ App rendered successfully')
  } catch (error) {
    console.error('‚ùå Failed to render app:', error)
    
    // Fallback UI
    document.body.innerHTML = `
      <div style="
        min-height: 100vh; 
        background: #09090b; 
        color: #fafafa; 
        display: flex; 
        align-items: center; 
        justify-content: center;
        font-family: system-ui;
        padding: 20px;
      ">
        <div style="text-align: center; max-width: 500px;">
          <h1 style="color: #ef4444; font-size: 24px; margin-bottom: 16px;">
            –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          </h1>
          <p style="color: #a1a1aa; margin-bottom: 20px;">
            ${error.message}
          </p>
          <button onclick="window.location.reload()" style="
            background: #6366f1; 
            color: white; 
            padding: 12px 24px; 
            border: none; 
            border-radius: 8px; 
            cursor: pointer;
            font-size: 16px;
          ">
            –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </button>
        </div>
      </div>
    `
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
renderApp()
